# Config file for poe-pcbrain settings
# Settings that are marked as being able to take multiple values can have parameters
# with comma separated values such as
# Setting=element1,element2,element3
# where element1, element2, ..., are the usual values of the setting.

[main]
# Sets whether to apply the savedstats filter as defined below. Settings to True
# will make the scraper save all items that have prices.
IgnoreItemFilter=False

# Filter out items that do not have the presence of these keys, no matter the
# what the key's corresponding value is. Can take multiple values.
RequiredKeys=note



[filter]
# Sets what league to save items from. Setting this to 'all' will save items from
# all leagues. For example 'Standard', 'Harbinger', 'Hardcore', 'Hardcore Harbinger'.
# Can take multiple values.
league=Harbinger,Hardcore Harbinger

# Sets what rarities of items to save. Can take multiple values.
# 0=normal, 1=magic, 2=rare, 3=unique, 4=gem, 5=currency, 6=divination card
# 7=quest item, 8=prophecy, 9=relic
frameType=2

# Sets whether to only retain identified items
identified=True


# Item filter settings follows. Up to date keys can be found at https://pathofexile.gamepedia.com/Public_stash_tab_API
# These keys are found in the JSON key ['stashes']['items']
# If a key is set to true, it's values will be labeled and saved.
# If a key is missing or set to False, it will not be saved.
# Keys that are written with capital letters are not keys available directly
# from the data but rather have to be calculated
[savedstats]
name=False
sockets=False
# The base type of the item
typeLine=True
ilvl=True
corrupted=True
explicitMods=True
implicitMods=True
enchantMods=True
craftedMods=True
# For example str, int requirements
requirements=False

# properties are the item stats such as attack speed, name, damage.
properties=False

[filter.properties]
# For setting specific properties to save. These can be found by looking at
# the public stash api response under properties.type. Can take multiple values.
# 6=quality, Crit. strike=12, Attacks/s=13
propertyTypes=12,13

[filter.requirements]
# For setting specific requirements to save to save. Can take multiple values.
requirementTypes=12,13

[filter.sockets]
# Sockets groups tells us what links there are
socketsgroup=True

# Tells us the color of the socket
socketsattr=False


[encoder]
# as of right now we only decide what encoders to use on the top level
# of the item and the items below this level are sort of inferred.
stringKeys=typeline
arrayKeys=implicitmods,explicitmods,enchantmods,craftedmods

# Defines the order that the labeller should output classes in
# all above defined keys need to be present here. Other keys that are not
# strings or arrays will be added last.
LabelOrder=typeline,implicitmods,explicitmods,enchantmods,craftedmods

# Path to the file containing labels (base types, affixes, currencies, etc).
# If not set, this will update as items have been retrieved and a label file
# has been produced.
ClassesFile=\labels\classes.npy





[retriever]
# Sets the minimum time in seconds between refreshing the public stash API
UpdateFrequency=15

# Defines what the next id to retrieve will be. This updates automatically
# after retrieving. This should probably (definantely) be set the first time
# poe-scraper is run unless you want to collect data from the beginning of the public stash API.
# The current next change id can be found at http://poe.ninja/stats
NextId=97902171-102719391-96458382-111322974-103936521
SavedDataDir=\saved_data\
